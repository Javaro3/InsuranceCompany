@model InsuranceCompany.Models.Client

@{
    ViewData["Title"] = "Редактировать клиента";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="text-center">Редактировать</h1>
<div class="row d-flex justify-content-center">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Surname" class="control-label"></label>
                <input asp-for="Surname" class="form-control" />
                <span asp-validation-for="Surname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MiddleName" class="control-label"></label>
                <input asp-for="MiddleName" class="form-control" />
                <span asp-validation-for="MiddleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Birthdate" class="control-label"></label>
                <input asp-for="Birthdate" type="date" class="form-control" />
                <span asp-validation-for="Birthdate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MobilePhone" class="control-label"></label>
                <input asp-for="MobilePhone" id="inputPhone" class="form-control" />
                <span asp-validation-for="MobilePhone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PassportNumber" class="control-label"></label>
                <input asp-for="PassportNumber" id="passportNumberInput" oninput="passportValidateInput()" maxlength="9" class="form-control" />
                <span asp-validation-for="PassportNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PassportIssueDate" class="control-label"></label>
                <input asp-for="PassportIssueDate" type="date" class="form-control" />
                <span asp-validation-for="PassportIssueDate" class="text-danger"></span>
            </div>
            <input type="submit" value="Сохранить" class="w-100 btn btn-lg btn-primary mt-2" />
        </form>
    </div>
</div>



<script>
    function passportValidateInput() {
        const inputField = document.getElementById('passportNumberInput');
        let inputValue = inputField.value;
        console.log(inputValue)
        for (let i = 0; i < inputValue.length; i++) {
            if (i < 2 && !/^[A-Z]$/.test(inputValue[i])) {
                inputField.value = inputValue.slice(0, inputValue.length - 1)
                break
            }
            if (i > 1 && i < 9 && !/^\d$/.test(inputValue[i])) {
                inputField.value = inputValue.slice(0, inputValue.length - 1)
                break
            }
        }

    }
    let inputPhone = document.getElementById("inputPhone");
    inputPhone.oninput = () => phoneMask(inputPhone)
    function phoneMask(inputEl) {
        let patStringArr = "+375 __ ___-__-__".split('');
        let arrPush = [5, 6, 8, 9, 10, 12, 13, 15, 16]
        let val = inputEl.value;
        let arr = val.replace(/\D+/g, "").split('').splice(3);
        let n;
        let ni;
        arr.forEach((s, i) => {
            n = arrPush[i];
            patStringArr[n] = s
            ni = i
        });
        inputEl.value = patStringArr.join('');
        n ? inputEl.setSelectionRange(n + 1, n + 1) : inputEl.setSelectionRange(17, 17)
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}